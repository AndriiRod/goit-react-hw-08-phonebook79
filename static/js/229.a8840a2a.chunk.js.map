{"version":3,"file":"static/js/229.a8840a2a.chunk.js","mappings":"2QAGaA,EAAOC,EAAAA,EAAAA,GAAH,wKAQJC,EAAWD,EAAAA,EAAAA,IAAH,qEAKRE,EAAOF,EAAAA,EAAAA,EAAH,8GASJG,EAASH,EAAAA,EAAAA,EAAH,8GASNI,EAAYJ,EAAAA,EAAAA,OAAH,wNAaTK,GAAOL,EAAAA,EAAAA,GAAOM,EAAAA,IAAPN,CAAH,4EAMJO,EAAMP,EAAAA,EAAAA,IAAH,uG,UCpBhB,EAjBoB,SAAC,GAAkC,IAAhCQ,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACjCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACd,EAAD,YACE,SAACQ,EAAD,CAAKO,IAAKH,G,6mBAA+BI,IAAI,YAC7C,UAACd,EAAD,YACE,SAACC,EAAD,UAAOO,KACP,SAAC,EAAD,UAASC,QAEX,SAACN,EAAD,CAAWY,KAAK,SAASC,QAAS,kBAAML,GAASM,EAAAA,EAAAA,IAAeV,GAA9B,EAAlC,UACE,SAACH,EAAD,QAIP,E,UCrBYc,GARWnB,EAAAA,EAAAA,GAAH,iHAQDA,EAAAA,EAAAA,GAAH,oQ,UCAjB,EARe,WACb,OACE,gBAAKoB,MAAO,CAAEC,OAAQ,UAAtB,UACE,SAAC,KAAD,CAAcC,MAAM,KAAKC,MAAM,aAGpC,EC0BD,EAzBqB,WACnB,IAAMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBC,GAAiBF,EAAAA,EAAAA,IAAYG,EAAAA,IAEnC,OACE,gCACGJ,IAAU,SAAC,EAAD,IACgB,IAA1BG,EAAeE,SACd,SAACV,EAAD,UACGQ,EAAeG,KAAI,gBAAGtB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,OAArB,OAClB,SAAC,EAAD,CAEEH,GAAIA,EACJC,KAAMA,EACNC,OAAQA,EACRC,OAAQA,GAJHH,EAFW,QAa7B,E,UC7BYuB,EAAQ/B,EAAAA,EAAAA,MAAH,+PAgBLgC,EAAQhC,EAAAA,EAAAA,MAAH,6QAkBLK,GAAOL,EAAAA,EAAAA,GAAOiC,EAAAA,IAAPjC,CAAH,4E,UCVjB,EArBkB,WAChB,IAAMY,GAAWC,EAAAA,EAAAA,MACXqB,GAAQT,EAAAA,EAAAA,IAAYU,EAAAA,IAM1B,OACE,UAACJ,EAAD,YACE,SAAC,EAAD,KACA,SAACC,EAAD,CACEI,YAAY,WACZpB,KAAK,OACLkB,MAAOA,EACPG,SAXkB,SAAAC,GACtB1B,GAAS2B,EAAAA,EAAAA,GAAOD,EAAEE,OAAON,OAC1B,MAaF,E,UCND,EAbiB,WACf,IAAMtB,GAAWC,EAAAA,EAAAA,MAIjB,OAHA4B,EAAAA,EAAAA,YAAU,WACR7B,GAAS8B,EAAAA,EAAAA,MACV,GAAE,CAAC9B,KAEF,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.jsx","components/Loader/Loader.jsx","components/ContactsList/ContactsList.jsx","components/FindField/FindField.styled.jsx","components/FindField/FindField.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { MdDeleteForever } from 'react-icons/md';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 0;\n  border-bottom: 1px solid rgba(208, 213, 221, 0.3);\n`;\n\nexport const TextWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Name = styled.p`\n  font-size: 14px;\n\n  font-weight: 500;\n  line-height: 1.43;\n\n  color: #101828;\n`;\n\nexport const Number = styled.p`\n  font-size: 14px;\n\n  font-weight: 400;\n  line-height: 1.43;\n\n  color: #667085;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: auto;\n  background-color: transparent;\n  border: none;\n  color: #667085;\n\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #f08080;\n  }\n`;\n\nexport const Icon = styled(MdDeleteForever)`\n  width: 20px;\n  height: 20px;\n  color: inherit;\n`;\n\nexport const Img = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nimport {\n  Item,\n  Name,\n  Number,\n  Img,\n  TextWrap,\n  DeleteBtn,\n  Icon,\n} from './ContactItem.styled';\n\nimport placeholder from '../../images/placeholder.png';\n\nconst ContactItem = ({ id, name, number, avatar }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Img src={avatar ? avatar : placeholder} alt=\"avatar\" />\n      <TextWrap>\n        <Name>{name}</Name>\n        <Number>{number}</Number>\n      </TextWrap>\n      <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n        <Icon />\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const SubTitle = styled.h2`\n  font-size: 18px;\n  line-height: 1.16;\n  font-weight: 500;\n\n  margin-bottom: 30px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  scrollbar-gutter: stable;\n\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background: #c1c1c1;\n  }\n`;\n","import { FallingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div style={{ margin: '0 auto' }}>\n      <FallingLines width=\"50\" color=\"#3f9bfc\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import ContactItem from 'components/ContactItem/';\n\nimport { useSelector } from 'react-redux';\n\nimport { selectStatus, selectVisibleContact } from 'redux/contacts/selectors';\n\nimport { List } from './ContactsList.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactsList = () => {\n  const status = useSelector(selectStatus);\n\n  const visibleContact = useSelector(selectVisibleContact);\n\n  return (\n    <>\n      {status && <Loader />}\n      {visibleContact.length !== 0 && (\n        <List>\n          {visibleContact.map(({ id, name, number, avatar }) => (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              avatar={avatar}\n            />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\nimport { FiSearch } from 'react-icons/fi';\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n\n  margin-bottom: 5px;\n  border-bottom: 1px solid #eaecf0;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.19;\n\n  color: #000000;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 15px 0;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #667085;\n\n  &::placeholder {\n    color: #c0c0c0;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Icon = styled(FiSearch)`\n  width: 20px;\n  height: 20px;\n  color: #667085;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Input, Label, Icon } from './FindField.styled';\n\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { search } from 'redux/contacts/filter-slice';\n\nconst FindField = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const onChangeHuddler = e => {\n    dispatch(search(e.target.value));\n  };\n\n  return (\n    <Label>\n      <Icon />\n      <Input\n        placeholder=\"Contacts\"\n        type=\"text\"\n        value={value}\n        onChange={onChangeHuddler}\n      />\n    </Label>\n  );\n};\n\nexport default FindField;\n","import ContactsList from 'components/ContactsList/';\nimport FindField from 'components/FindField/';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <FindField />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Item","styled","TextWrap","Name","Number","DeleteBtn","Icon","MdDeleteForever","Img","id","name","number","avatar","dispatch","useDispatch","src","alt","type","onClick","deleteContacts","List","style","margin","width","color","status","useSelector","selectStatus","visibleContact","selectVisibleContact","length","map","Label","Input","FiSearch","value","selectFilter","placeholder","onChange","e","search","target","useEffect","fetchContacts"],"sourceRoot":""}